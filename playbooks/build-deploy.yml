---
- name: Update Arista fabric configuration
  hosts: all
  connection: local
  gather_facts: false
  collections:
    - arista.avd
    - ansible.scm
  vars:
    artifacts_repository: https://github.com/arista-netdevops-community/avd-aap.git
    artifacts_folder: artifacts

  tasks:
    - name: Retrieve latest artifacts
      delegate_to: localhost
      run_once: true
      git_retrieve:
        origin:
          url: "{{ artifacts_repository }}"
      register: repository

    - name: Set AVD working directory
      set_fact:
        root_dir: "{{ repository['path'] }}/{{ artifacts_folder }}"

    - name: Generate AVD structured configurations
      import_role:
        name: eos_designs

    - name: Generate EOS intended configuration and device documentation
      delegate_to: localhost
      register: eos_config
      eos_cli_config_gen:
        structured_config_filename: "{{ structured_dir }}/{{ inventory_hostname }}.{{ avd_structured_config_file_format }}"
        config_filename: "{{ root_dir }}/{{ output_dir_name }}/configs/{{ inventory_hostname }}.cfg"
        documentation_filename: "{{ root_dir }}/{{ documentation_dir_name }}/{{ inventory_hostname }}.md"

    - name: Deploy configurations and tags to CloudVision
      when: eos_config.changed
      delegate_to: cloudvision
      import_role:
        name: cv_deploy
      vars:
        cv_workspace_name: "Configuration changes by Ansible Automation Platform user '{{ awx_user_name }}'"
        cv_register_detailed_results: true

    - name: Debug
      run_once: true
      delegate_to: localhost
      debug:
        var: vars

    - name: Publish artifacts
      when: eos_config.changed
      run_once: true
      delegate_to: localhost
      git_publish:
        commit:
          message: |
            Configuration changes by Ansible Automation Platform user '{{ awx_user_name }}'

            https://{{ cv_server }}/cv/provisioning/change-control?ccId=Workspace-ws-cdc031a2-72a4-410f-a8b9-bf0c189776d1 {{ cv_deploy_results.change_control.id }}
        token: "{{ github_pat }}"
        path: "{{ repository['path'] }}"
        include: ["{{ artifacts_folder }}"]